# -*- coding: utf-8 -*-
"""housing.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1igtFznoLiqrJx6-1WpvW90XPLKEl8hI_
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score

url="https://raw.githubusercontent.com/priya055/house-price-prediction/main/housing%20datasets/Housing.csv"
data = pd.read_csv(url)
data.head()

data['mainroad'] = data['mainroad'].replace({'yes':1,'no':0}).astype(int)
data['guestroom'] = data['guestroom'].replace({'yes':1,'no':0}).astype(int)
data['basement'] = data['basement'].replace({'yes':1,'no':0}).astype(int)
data['hotwaterheating'] = data['hotwaterheating'].replace({'yes':1,'no':0}).astype(int)
data['airconditioning'] = data['airconditioning'].replace({'yes':1,'no':0}).astype(int)
data['prefarea'] = data['prefarea'].replace({'yes':1,'no':0}).astype(int)
data['furnishingstatus'] = data['furnishingstatus'].replace({'furnished':2,'semi-furnished':1, 'unfurnished':0 }).astype(int)

data.head()

# Split the data into features (X) and target (y)
X = data[['area',	'bedrooms',	'bathrooms',	'stories',	'mainroad',	'guestroom',	'basement',	'hotwaterheating',	'airconditioning',	'parking',	'prefarea',	'furnishingstatus']]
y = data['price']

# Split the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

model = LinearRegression()

model.fit(X_train, y_train)

y_pred = model.predict(X_test)

predicted_prices = model.predict(X)

print(predicted_prices)

sns.displot(data['price'])

price_corr = data.corr()
plt.figure(figsize= (12,7))
sns.heatmap(price_corr,annot = True,  cmap='Spectral')
plt.title('Correlation HeatMap')
plt.show()

mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)

print(f"Mean Squared Error: {mse:.2f}")
print(f"R-squared: {r2:.2f}")
